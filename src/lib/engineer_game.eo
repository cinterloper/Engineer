struct Engineer_Game_Node
{
   ipaddress: void_ptr;
   mode: string;
}

struct Engineer_Game_Module
{
   id:     uint;
   handle: void_ptr;

   add:    void_ptr;
   load:   void_ptr;
   save:   void_ptr;
   del:    void_ptr;

   awake:  void_ptr;
   start:  void_ptr;
   update: void_ptr;
}

class Engineer.Game(Efl.Object)
{
   implements
   {
      Efl.Object.constructor;
      Efl.Object.finalize;
      Efl.Object.destructor;
   }

   constructors
   {
   }

   events
   {
   }

   methods
   {

      file_load
      {
      }

      file_save
      {
      }

      file_close
      {
      }

      scene_create
      {
         params
         {
            @in name: string;
         }
      }

      scene_load
      {
         params
         {
            @in name: string;
         }
      }

      scene_save
      {
         params
         {
            @in name: string;
         }
      }

      scene_unload
      {
         params
         {
            @in name: string;
         }
      }

      module_register
      {
         params
         {
            @in name: string;
         }
      }

      module_load
      {
         params
         {
            @in file: string;
         }
      }

      module_unload
      {
         params
         {
            @in target: Efl.Object;
         }
      }

      module_unregister
      {
         params
         {
            @in name: string;
         }
      }

      module_lookup
      {
         params
         {
            @in target: uint;
         }
         return: char*;
      }

      module_id_use
      {
         return: uint;
      }

      module_id_free
      {
         params
         {
            @in target: uint;
         }
      }
   }
}
