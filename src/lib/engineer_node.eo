struct Engineer_Node_Peer
{
   ipaddress: uint;
   mode:      string;
}

struct Engineer_Node_Module
{
   id:      uint;
   class:   void_ptr;

   create:  void_ptr;
   load:    void_ptr;
   save:    void_ptr;
   destroy: void_ptr;
   lookup:  void_ptr;

   factory: void_ptr;
   awake:   void_ptr;
   start:   void_ptr;
   update:  void_ptr;
}

class Engineer.Node(Efl.Object)
{
   implements
   {
      Efl.Object.constructor;
      Efl.Object.finalize;
      Efl.Object.destructor;
   }

   constructors
   {
   }

   events
   {
   }

   methods
   {
      @property path
      {
         get { return: string; }
         set
         {
            values
            {
               path: string;
            }
         }
      }

      @property title
      {
         get { return: string; }
         set
         {
            values
            {
               title: string;
            }
         }
      }

      file_load
      {
      }

      file_save
      {
      }

      file_close
      {
      }

      scene_create
      {
         params
         {
            @in name: stringshare;
         }
         return: Efl.Object;
      }

      scene_load
      {
         params
         {
            @in name: stringshare;
         }
         return: Efl.Object;
      }

      scene_save
      {
         params
         {
            @in name: stringshare;
         }
      }

      scene_unload
      {
         params
         {
            @in name: stringshare;
         }
      }

      module_register
      {
         params
         {
            @in name: stringshare;
         }
       return: uint;
      }

      module_load
      {
         params
         {
            @in file: stringshare;
         }
      }

      module_unload
      {
         params
         {
            @in target: Efl.Object;
         }
      }

      module_unregister
      {
         params
         {
            @in name: string;
         }
      }

      module_lookup
      {
         params
         {
            @in target: uint;
         }
         return: ptr(Engineer_Node_Module);
      }

      module_lookup_by_type
      {
         params
         {
            @in target: string;
         }
         return: ptr(Engineer_Node_Module);
      }

      module_id_use
      {
         return: uint;
      }

      module_id_free
      {
         params
         {
            @in target: uint;
         }
      }

      entity_id_use
      {
         return: uint;
      }

      entity_id_free
      {
         params
         {
            @in target: uint;
         }
      }

      entity_location_get
      {
         params
         {
            @in target: uint;
         }
       return: uint;
      }

      entity_location_set
      {
         params
         {
            @in target:   uint;
            @in location: uint;
         }
      }

      entity_status_get
      {
         params
         {
            @in target: uint;
         }
         return: uint;
      }

      entity_status_set
      {
         params
         {
            @in target: uint;
            @in mode:   char;
         }
      }

      component_id_use
      {
         return: uint;
      }

      component_id_free
      {
         params
         {
            @in target: uint;
         }
      }

      component_location_get
      {
         params
         {
            @in target: uint;
         }
         return: uint;
      }

      component_location_set
      {
         params
         {
            @in target:   uint;
            @in location: uint;
         }
      }

      component_status_get
      {
         params
         {
            @in target: uint;
         }
         return: uint;
      }

      component_status_set
      {
         params
         {
            @in target: uint;
            @in mode:   char;
         }
      }
   }
}
