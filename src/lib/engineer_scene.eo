struct @extern Data    {}
struct @extern State   {}
struct @extern Payload {}

struct @extern Engineer_Component_Class {}
struct @extern Engineer_Entity_History  {}
struct @extern Engineer_Scene_Frame     {}

type @extern Index:       uint64;
type @extern ClassID:     uint64;

type @extern EntityID:    uint64;
type @extern ComponentID: uint64;
type @extern EventID:     uint64;

type @extern ClassLabel:  string;
type @extern EventLabel:  string;
type @extern StateLabel:  string;

class Engineer.Scene(Efl.Object)
{
   implements
   {
      Efl.Object.constructor;
      Efl.Object.finalize;
      Efl.Object.destructor;
   }

   events
   {
      iterate_cb;
   }

   methods
   {
      efl_object_constructor
      {
         return: Efl.Object;
      }

      efl_object_finalize
      {
         return: Efl.Object;
      }

      efl_object_destructor
      {
      }

      @property name
      {
         get { return: string; }
         set
         {
            values
            {
               name: string;
            }
         }
      }

      @property module
      {
         get
         {
            values
            {
               class: Engineer_Component_Class;
            }
            return: Efl.Object;
         }
      }

      module_new
      {
         params
         {
            @in class: ptr(Engineer_Component_Class);
         }
         return: bool;
      }

      iterate
      {
         return: bool;
      }

      dispatch
      {
         params
         {
            @in inboxs: ptr(Eina.Inarray);
         }
      }

      entity_factory
      {
         params
         {
            @in id:     EntityID;
            @in parent: EntityID;
         }
         return: bool;
      }

      entity_create
      {
         params
         {
            @in sender: EntityID;
            @in parent: EntityID;
         }
         return: EntityID;
      }

      entity_attach
      {
         params
         {
            @in target:    EntityID;
            @in newparent: EntityID;
         }
      }

      entity_component_search
      {
         params
         {
            @in entityid: EntityID;
            @in target:   ClassLabel;
         }
         return: ComponentID;
      }

      entity_lookup
      {
         params
         {
            @in target: EntityID;
         }
         return: Index;
      }

      entity_parent_set
      {
         params
         {
            @in target:    EntityID;
            @in newparent: EntityID;
         }
      }

      entity_parent_get
      {
         params
         {
            @in target: EntityID;
            @in offset: uint64;
         }
         return: EntityID;
      }

      entity_siblingnext_set
      {
         params
         {
            @in target:      EntityID;
            @in siblingnext: EntityID;
         }
      }

      entity_siblingnext_get
      {
         params
         {
            @in target: EntityID;
         }
         return: EntityID;
      }

      entity_siblingprev_set
      {
         params
         {
            @in target:      EntityID;
            @in siblingprev: EntityID;
         }
      }

      entity_siblingprev_get
      {
         params
         {
            @in target: EntityID;
         }
         return: EntityID;
      }

      entity_firstentity_set
      {
         params
         {
            @in target: EntityID;
            @in entity: EntityID;
         }
      }

      entity_firstentity_get
      {
         params
         {
            @in target: EntityID;
         }
         return: EntityID;
      }

      entity_firstcomponent_set
      {
         params
         {
            @in target:    EntityID;
            @in component: ComponentID;
         }
      }

      entity_firstcomponent_get
      {
         params
         {
            @in target: EntityID;
         }
         return: ComponentID;
      }

      entity_inbox_get
      {
         params
         {
            @in entityid: EntityID;
         }
         return: ptr(Eina.Inarray);
      }

      entity_outbox_get
      {
         params
         {
            @in entityid: EntityID;
         }
         return: ptr(Eina.Inarray);
      }

      component_factory
      {
         params
         {
            @in target:  ComponentID;
            @in parent:  EntityID;
            @in payload: ptr(Data);
         }
         return: bool;
      }

      component_create
      {
         params
         {
            @in sender:  EntityID;
            @in class:   ptr(Engineer_Component_Class);
            @in parent:  EntityID;
            @in payload: ptr(Data);
         }
         return: ComponentID;
      }

      component_attach
      {
         params
         {
            @in target:    ComponentID;
            @in newparent: EntityID;
         }
      }

      component_parent_get
      {
         params
         {
            @in target: ComponentID;
            @in offset: uint64;
         }
         return: EntityID;
      }

      component_state_get
      {
         params
         {
            @in target: ComponentID;
            @in key:    StateLabel;
         }
         return: ptr(State);
      }

      notify_event
      {
         params
         {
            @in sender:   ComponentID;
            @in reciever: EntityID;
            @in type:     EventID;
            @in payload:  ptr(Payload);
            @in size:     uint64;
         }
      }

      notify_entity_create
      {
         params
         {
            @in sender:   EntityID;
            @in entityid: EntityID;
            @in parent:   EntityID;
         }
      }

      notify_component_create
      {
         params
         {
            @in sender:      EntityID;
            @in class:       ptr(Engineer_Component_Class);
            @in componentid: ComponentID;
            @in parent:      EntityID;
            @in payload:     ptr(Data);
         }
      }

   }

}
