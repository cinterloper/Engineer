struct @extern Engineer_Component_Class {}
type   @extern ClassID:     uint64;
type   @extern ComponentID: uint64;

struct Engineer_Node_Peer
{
   ipaddress: uint;
   mode:      string;
}

class Engineer.Node(Efl.Object)
{
   implements
   {
      Efl.Object.constructor;
      Efl.Object.finalize;
      Efl.Object.destructor;
   }

   constructors
   {
   }

   events
   {
   }

   methods
   {
      @property path
      {
         get { return: string; }
         set
         {
            values
            {
               path: string;
            }
         }
      }

      @property title
      {
         get { return: string; }
         set
         {
            values
            {
               title: string;
            }
         }
      }

      module_load
      {
         params
         {
            @in class: string;
         }
         return: uint64;
      }

      entity_id_use
      {
         return: uint64;
      }

      entity_id_free
      {
         params
         {
            @in target: uint64;
         }
      }

      entity_location_get
      {
         params
         {
            @in target: uint64;
         }
       return: uint64;
      }

      entity_location_set
      {
         params
         {
            @in target:   uint64;
            @in location: uint64;
         }
      }

      entity_status_get
      {
         params
         {
            @in target: uint64;
         }
         return: uint32;
      }

      entity_status_set
      {
         params
         {
            @in target: uint64;
            @in mode:   char;
         }
      }

      component_id_use
      {
         return: uint64;
      }

      component_id_free
      {
         params
         {
            @in target: uint64;
         }
      }

      component_location_get
      {
         params
         {
            @in target: ComponentID;
         }
         return: uint64;
      }

      component_location_set
      {
         params
         {
            @in target:   ComponentID;
            @in location: uint64;
         }
      }

      component_status_get
      {
         params
         {
            @in target: ComponentID;
         }
         return: uint32;
      }

      component_status_set
      {
         params
         {
            @in target: ComponentID;
            @in mode:   char;
         }
      }

      component_class_get
      {
         params
         {
            @in target: ComponentID;
         }
         return: ptr(Engineer_Component_Class);
      }

      component_classid_get
      {
         params
         {
            @in target: ComponentID;
         }
         return: ClassID;
      }

      component_classid_set
      {
         params
         {
            @in target: ComponentID;
            @in class:  ClassID;
         }
      }

   }
}
